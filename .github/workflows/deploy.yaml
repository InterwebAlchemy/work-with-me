name: Continuous Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_AUTH_TOKEN }}

      - name: Configure git
        run: |
          git config --global user.email "bot@workwithme.app"
          git config --global user.name "Work w/ Me Release Bot"

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Encode Supabase API Key
        id: credentials
        run: |
          api_key="${{ secrets.SUPABASE_ANON_KEY }}"
          url_encoded_key=$(node -p "encodeURIComponent('$api_key')")
          echo "::set-output name=ENCODED_SUPABASE_ANON_KEY::${url_encoded_key}";

      - name: Generate Types
        run: npm run build:types
        env:
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_ANON_KEY: ${{ steps.credentials.outputs.ENCODED_SUPABASE_ANON_KEY }}

      - name: Check for modified files
        id: git-check
        run:
          echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo
          "true"; else echo "false"; fi)

      - name: Push Changes to Type Definitions
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git add .
          git commit -m 'chore(types): update supabase type definitions'
          git push

      - name: Run Tests
        run: npm test

      - name: PR Preview Deployment
        uses: amondnet/vercel-action@v20
        id: vercel-action-pr
        if: startsWith(github.head_ref, 'feature/') && github.base_ref == 'main'
        with:
          vercel-project-name: work-with-me
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GH_AUTH_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: interweb-alchemy
          alias-domains: |
            pr-{{PR_NUMBER}}-work-with-me.vercel.app

      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: vercel-action-production
        if: github.ref == 'refs/heads/main'
        with:
          vercel-project-name: work-with-me
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GH_AUTH_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: '--prod'
          scope: interweb-alchemy
          alias-domains: |
            work-with-me.vercel.app

      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
